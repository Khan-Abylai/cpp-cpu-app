FROM ubuntu:20.04
SHELL ["/bin/bash", "-c"]

ENV DEBIAN_FRONTEND=noninteractive
ENV TZ=Asia/Almaty

ARG OPENCV_VERSION=4.6.0
ARG ONNXRUNTIME_VERSION=1.12.0
ARG CMAKE_VERSION=3.23.2
ARG NUM_JOBS=8

RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone
RUN apt update && apt install -y tzdata && dpkg-reconfigure tzdata

RUN apt-get update && apt-get install -y --no-install-recommends \
    software-properties-common \
    autoconf \
    automake \
    libtool \
    pkg-config \
    ca-certificates \
    wget \
    git \
    curl \
    libjpeg-dev \
    libpng-dev \
    language-pack-en \
    locales \
    locales-all \
    python3 \
    python3-py \
    python3-dev \
    python3-pip \
    python3-numpy \
    python3-pytest \
    python3-setuptools \
    libprotobuf-dev \
    protobuf-compiler \
    zlib1g-dev \
    swig \
    vim \
    gdb \
    valgrind \
    libsm6 \
    libxext6 \
    libxrender-dev \
    cmake \
    unzip \
    autoconf \
    python3-dev  \
    ca-certificates  \
    python3-numpy  \
    make  \
    git  \
    python3-setuptools  \
    python3-wheel \
    python3-pip  \
    aria2 \
    automake \
    apt-utils \
    software-properties-common \
    libtool \
    pkg-config \
    ca-certificates \
    sudo \
    build-essential \
    cmake \
    git \
    curl \
    gcc \
    vim \
    wget \
    unzip \
    yasm \
    libjpeg-dev \
    libssl-dev \
    libcurl4-openssl-dev \
    libglu1-mesa-dev \
    libprotobuf-dev \
    protobuf-compiler \
    autopoint \
    bison \
    flex \
    gtk-doc-tools \
    libglib2.0-dev  \
    liborc-0.4-0 \
    liborc-0.4-dev \
    swig \
    libgtk2.0-dev \
    libzmq3-dev \
    libcanberra-gtk-module \
    libcanberra-gtk3-module \
    libglib2.0-dev  \
    liborc-0.4-0 \
    liborc-0.4-dev \
    swig  \
    libzmq3-dev \
    xorg-dev \
    libunwind-dev \
    libdw-dev \
    libgmp-dev \
    libgsl-dev \
    libglib2.0-dev \
    flex \
    bison \
    libcap-dev \
    libgirepository1.0-dev \
    gettext \
    liborc-0.4-dev \
    iso-codes \
    libgl-dev \
    libdrm-dev \
    libgraphene-1.0-dev \
    libgudev-1.0-dev \
    libgbm-dev \
    libpng-dev \
    libjpeg-dev \
    libogg-dev \
    libopus-dev \
    libpango1.0-dev \
    libvisual-0.4-dev \
    libtheora-dev \
    libvorbis-dev \
    libxkbcommon-dev \
    libwayland-dev \
    libepoxy-dev \
    libgcrypt20-dev \
    libwebp-dev \
    libopenjp2-7-dev \
    libwoff-dev \
    libxslt1-dev \
    bubblewrap \
    libseccomp-dev \
    gperf \
    libsoup2.4-dev \
    libvulkan-dev \
    libass-dev \
    libchromaprint-dev \
    libbz2-dev \
    liblcms2-dev \
    libbs2b-dev \
    libdca-dev \
    libfaac-dev \
    libfaad-dev \
    flite1-dev \
    libssl-dev \
    libfdk-aac-dev \
    libfluidsynth-dev \
    libgsm1-dev \
    libkate-dev \
    libgme-dev \
    libde265-dev \
    liblilv-dev \
    libmodplug-dev \
    libmjpegtools-dev \
    libmpcdec-dev \
    libdvdnav-dev \
    libdvdread-dev \
    librsvg2-dev \
    librtmp-dev \
    libsbc-dev \
    libsndfile1-dev \
    libsoundtouch-dev \
    libspandsp-dev \
    libsrtp2-dev \
    libvo-aacenc-dev \
    libvo-amrwbenc-dev \
    libwebrtc-audio-processing-dev \
    libofa0-dev \
    libzvbi-dev \
    libopenexr-dev \
    libwildmidi-dev \
    libx265-dev \
    libzbar-dev \
    wayland-protocols \
    libaa1-dev \
    libmp3lame-dev \
    libcaca-dev \
    libdv4-dev \
    libmpg123-dev \
    libvpx-dev \
    libshout3-dev \
    libspeex-dev \
    libtag1-dev \
    libtwolame-dev \
    libwavpack-dev \
    liba52-0.7.4-dev \
    libx264-dev \
    libopencore-amrnb-dev \
    libopencore-amrwb-dev \
    libmpeg2-4-dev \
    libavcodec-dev \
    libavfilter-dev \
    libavformat-dev \
    libavutil-dev \
    libva-dev \
    gdb \
    libudev-dev && apt-get clean

RUN apt-get update && apt-get install -y libavcodec-dev libavformat-dev libswscale-dev
RUN apt-get update && apt-get install -y libgstreamer-plugins-base1.0-dev libgstreamer1.0-dev
RUN apt-get update && apt-get install -y libgtk-3-dev
RUN apt-get update && apt-get install -y libpng-dev libopenexr-dev libtiff-dev libwebp-dev
RUN apt-get clean

RUN cd /usr/local/bin && \
    ln -s /usr/bin/python3 python && \
    ln -s /usr/bin/pip3 pip && \
    pip install --upgrade pip setuptools wheel

RUN apt-get install -y --no-install-recommends libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-doc gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio

ENV LC_ALL en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LANGUAGE en_US.UTF-8

RUN apt clean && add-apt-repository ppa:ubuntu-toolchain-r/test \
&& apt update && apt install -y gcc-11 g++-11 --no-install-recommends \
&& sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11  11 \
&& sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 11 \
&& cd /tmp/ \
&& wget https://github.com/Kitware/CMake/releases/download/v3.20.1/cmake-3.20.1.tar.gz \
&& tar -xvf cmake-3.20.1.tar.gz \
&& cd cmake-3.20.1 \
&& ./configure && make -j16 && make install -j16 \
&& rm -rf /tmp/cmake-3.20.1*

RUN sudo apt-get install -y --no-install-recommends gstreamer1.0-tools gstreamer1.0-alsa gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav

RUN apt-get install -y --no-install-recommends libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-doc gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio

RUN cd /tmp/ && sudo apt-get install -y meson ninja-build \
&& wget https://gstreamer.freedesktop.org/src/gstreamer/gstreamer-1.18.6.tar.xz \
&& wget https://gstreamer.freedesktop.org/src/gst-plugins-base/gst-plugins-base-1.18.6.tar.xz \
&& wget https://gstreamer.freedesktop.org/src/gst-plugins-good/gst-plugins-good-1.18.6.tar.xz \
&& wget https://gstreamer.freedesktop.org/src/gst-plugins-bad/gst-plugins-bad-1.18.6.tar.xz \
&& wget https://gstreamer.freedesktop.org/src/gst-libav/gst-libav-1.18.6.tar.xz \
&& tar -xvf gstreamer-1.18.6.tar.xz && cd gstreamer-1.18.6 && meson build --prefix=/usr && ninja -C build install && cd .. \
&& tar -xvf gst-plugins-base-1.18.6.tar.xz && cd gst-plugins-base-1.18.6 && meson build --prefix=/usr && ninja -C build install && cd .. \
&& tar -xvf gst-plugins-good-1.18.6.tar.xz && cd gst-plugins-good-1.18.6 && meson build --prefix=/usr && ninja -C build install && cd .. \
&& tar -xvf gst-plugins-bad-1.18.6.tar.xz && cd gst-plugins-bad-1.18.6 && meson build --prefix=/usr && ninja -C build install && cd .. \
&& tar -xvf gst-libav-1.18.6.tar.xz && cd gst-libav-1.18.6 && meson build --prefix=/usr && ninja -C build install && cd .. \
&& rm -rf *

RUN cd /tmp/ && git clone --recursive https://github.com/whoshuu/cpr.git && cd cpr && mkdir build && cd build && cmake .. && make -j4 && make install \
&& cd /tmp/ && rm -rf cpr \
&& cd /tmp/ && wget -O json-3.9.1.tar.gz https://github.com/nlohmann/json/archive/v3.9.1.tar.gz && tar xvzf json-3.9.1.tar.gz \
&&  cd json-3.9.1 && mkdir build && cd build \
&& cmake .. && make -j8 && make install && rm -rf /tmp/json*


RUN cd /tmp && \
    wget -O opencv.zip https://github.com/opencv/opencv/archive/${OPENCV_VERSION}.zip && \
    wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/${OPENCV_VERSION}.zip && \
    wget -O opencv_extra.zip https://github.com/opencv/opencv_extra/archive/${OPENCV_VERSION}.zip && \
    unzip opencv.zip && \
    unzip opencv_contrib.zip && \
    unzip opencv_extra.zip && \
    mkdir -p build && cd build && \
    cmake -DOPENCV_EXTRA_MODULES_PATH=../opencv_contrib-${OPENCV_VERSION}/modules \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DBUILD_PNG=OFF \
        -DBUILD_TIFF=OFF \
        -DBUILD_TBB=OFF \
        -DBUILD_JPEG=OFF \
        -DBUILD_JASPER=OFF \
        -DBUILD_ZLIB=OFF \
        -DBUILD_EXAMPLES=ON \
        -DBUILD_JAVA=OFF \
        -DBUILD_opencv_python2=OFF \
        -DBUILD_opencv_python3=ON \
        -DWITH_OPENCL=OFF \
        -DWITH_OPENMP=OFF \
        -DWITH_FFMPEG=ON \
        -DWITH_GSTREAMER=OFF \
        -DWITH_GSTREAMER_0_10=OFF \
        -DWITH_GTK=ON \
        -DWITH_VTK=OFF \
        -DWITH_TBB=ON \
        -DWITH_1394=OFF \
        -DWITH_OPENEXR=OFF \
        -DINSTALL_C_EXAMPLES=ON \
        -DINSTALL_TESTS=OFF \
        -DOPENCV_TEST_DATA_PATH=../opencv_extra-${OPENCV_VERSION}/testdata \
        ../opencv-${OPENCV_VERSION} && \
    cmake --build . --parallel ${NUM_JOBS} && \
    make install
RUN rm -rf /tmp/*
RUN pip install pytest==6.2.1 onnx==1.12.0
RUN cd /tmp && \
    git clone --recursive --branch v${ONNXRUNTIME_VERSION} https://github.com/Microsoft/onnxruntime && \
    cd onnxruntime && \
    ./build.sh \
        --config RelWithDebInfo \
        --build_shared_lib \
        --build_wheel \
        --skip_tests \
        --parallel ${NUM_JOBS} && \
    cd build/Linux/RelWithDebInfo && \
    make install && \
    pip install dist/*
RUN rm -rf /tmp/*